{
  "name": "@sveltejs/adapter-static",
  "version": "1.0.0-next.23",
  "repository": {
    "type": "git",
    "url": "https://github.com/sveltejs/kit",
    "directory": "packages/adapter-static"
  },
  "license": "MIT",
  "homepage": "https://kit.svelte.dev",
  "type": "module",
  "main": "index.js",
  "exports": {
    ".": {
      "import": "./index.js"
    },
    "./package.json": "./package.json"
  },
  "types": "index.d.ts",
  "dependencies": {
    "tiny-glob": "^0.2.9"
  },
  "devDependencies": {
    "@sveltejs/kit": "1.0.0-next.203",
    "playwright-chromium": "^1.17.0",
    "port-authority": "^1.1.2",
    "sirv": "^1.0.19",
    "svelte": "^3.44.2",
    "uvu": "^0.5.2"
  },
  "scripts": {
    "lint": "eslint --ignore-path .gitignore \"**/*.{ts,js,svelte}\" && npm run check-format",
    "check": "tsc",
    "format": "npm run check-format -- --write",
    "check-format": "prettier --check . --config ../../.prettierrc --ignore-path .gitignore",
    "test": "uvu test test.js"
  },
  "readme": "# @sveltejs/adapter-static\n\n[Adapter](https://kit.svelte.dev/docs#adapters) for SvelteKit apps that prerenders your site as a collection of static files.\n\n## Usage\n\nInstall with `npm i -D @sveltejs/adapter-static@next`, then add the adapter to your `svelte.config.js`:\n\n```js\n// svelte.config.js\nimport adapter from '@sveltejs/adapter-static';\n\nexport default {\n\tkit: {\n\t\tadapter: adapter({\n\t\t\t// default options are shown\n\t\t\tpages: 'build',\n\t\t\tassets: 'build',\n\t\t\tfallback: null,\n\t\t\tprecompress: false\n\t\t})\n\t}\n};\n```\n\nUnless you're in [SPA mode](#spa-mode), the adapter will attempt to prerender every page of your app, regardless of whether the [`prerender`](https://kit.svelte.dev/docs#ssr-and-javascript-prerender) option is set.\n\n## Options\n\n### pages\n\nThe directory to write prerendered pages to. It defaults to `build`.\n\n### assets\n\nThe directory to write static assets (the contents of `static`, plus client-side JS and CSS generated by SvelteKit) to. Ordinarily this should be the same as `pages`, and it will default to whatever the value of `pages` is, but in rare circumstances you might need to output pages and assets to separate locations.\n\n### fallback\n\nSpecify a fallback page for SPA mode, e.g. `index.html` or `200.html` or `404.html`.\n\n### precompress\n\nIf `true`, precompresses files with brotli and gzip. This will generate `.br` and `.gz` files.\n\n## SPA mode\n\nYou can use `adapter-static` to create a single-page app or SPA by specifying a **fallback page**.\n\n> In most situations this is not recommended: it harms SEO, tends to slow down perceived performance, and makes your app inaccessible to users if JavaScript fails or is disabled (which happens [more often than you probably think](https://kryogenix.org/code/browser/everyonehasjs.html)).\n\nThe fallback page is a blank HTML page that loads your SvelteKit app and navigates to the correct route. For example [Surge](https://surge.sh/help/adding-a-200-page-for-client-side-routing), a static web host, lets you add a `200.html` file that will handle any requests that don't otherwise match. We can create that file like so:\n\n```js\n// svelte.config.js\nimport adapter from '@sveltejs/adapter-static';\n\nexport default {\n\tkit: {\n\t\tadapter: adapter({\n\t\t\tfallback: '200.html'\n\t\t})\n\t}\n};\n```\n\nWhen operating in SPA mode, only pages that have the [`prerender`](https://kit.svelte.dev/docs#ssr-and-javascript-prerender) option set will be prerendered.\n\n## GitHub Pages\n\nWhen building for GitHub Pages, make sure to update [`paths.base`](https://kit.svelte.dev/docs#configuration-paths) to match your repo name, since the site will be served from https://your-username.github.io/your-repo-name rather than from the root.\n\nYou will have to prevent GitHub's provided Jekyll from managing your site by putting an empty `.nojekyll` file in your static folder. If you do not want to disable Jekyll, change the kit's `appDir` configuration option to `'app_'` or anything not starting with an underscore. For more information, see GitHub's [Jekyll documentation](https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll#configuring-jekyll-in-your-github-pages-site).\n\nA config for GitHub Pages might look like the following:\n\n```js\nconst dev = process.env.NODE_ENV === 'development';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\t...\n\tkit: {\n\t\t...\n\t\tpaths: {\n\t\t\tbase: dev ? '' : '/your-repo-name',\n\t\t},\n\t\t// If you are not using a .nojekyll file, change your appDir to something not starting with an underscore.\n\t\t// For example, instead of '_app', use 'app_', 'internal', etc.\n\t\tappDir: 'internal',\n\t}\n};\n```\n\n## Changelog\n\n[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/master/packages/adapter-static/CHANGELOG.md).\n\n## License\n\n[MIT](LICENSE)\n"
}